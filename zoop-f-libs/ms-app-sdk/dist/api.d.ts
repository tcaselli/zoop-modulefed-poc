/**
 * Zoop-poc-api
 * Zooplus POC
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 * CounterApi - axios parameter creator
 * @export
 */
export declare const CounterApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get counter value
     * @summary Get counter value
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCounter: (options?: any) => Promise<RequestArgs>;
    /**
     * Increment the counter by 1
     * @summary Increment the counter by 1
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    incrementCounter: (options?: any) => Promise<RequestArgs>;
};
/**
 * CounterApi - functional programming interface
 * @export
 */
export declare const CounterApiFp: (configuration?: Configuration) => {
    /**
     * Get counter value
     * @summary Get counter value
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCounter(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    /**
     * Increment the counter by 1
     * @summary Increment the counter by 1
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    incrementCounter(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
};
/**
 * CounterApi - factory interface
 * @export
 */
export declare const CounterApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get counter value
     * @summary Get counter value
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCounter(options?: any): AxiosPromise<number>;
    /**
     * Increment the counter by 1
     * @summary Increment the counter by 1
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    incrementCounter(options?: any): AxiosPromise<number>;
};
/**
 * CounterApi - object-oriented interface
 * @export
 * @class CounterApi
 * @extends {BaseAPI}
 */
export declare class CounterApi extends BaseAPI {
    /**
     * Get counter value
     * @summary Get counter value
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CounterApi
     */
    getCounter(options?: any): Promise<import("axios").AxiosResponse<number>>;
    /**
     * Increment the counter by 1
     * @summary Increment the counter by 1
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CounterApi
     */
    incrementCounter(options?: any): Promise<import("axios").AxiosResponse<number>>;
}
