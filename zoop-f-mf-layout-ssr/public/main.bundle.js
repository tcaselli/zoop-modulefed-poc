!function(){"use strict";var e,t,n,r,o,u,i,f,a,c={1209:function(e,t,n){var r,o=n(2137),u=n(7757),i=n.n(u),f=n(7930);f("imported_jdipgn_component",Promise.all([n.e(691),n.e(646)]).then(n.bind(n,3646))),(r=(0,o.Z)(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!Boolean(JSON.parse("false"))){e.next=7;break}return e.next=4,f("imported_1jmfft2_component",Promise.all([n.e(24),n.e(644)]).then(n.bind(n,9644)));case 4:e.sent.worker.start();case 7:return e.abrupt("return");case 8:case"end":return e.stop()}}),e)}))),function(){return r.apply(this,arguments)})()},3258:function(e,t,n){var r=new Error;e.exports=new Promise((function(e,t){if("undefined"!=typeof app1)return e();n.l("http://localhost:1901/remoteEntry.js",(function(n){if("undefined"!=typeof app1)return e();var o=n&&("load"===n.type?"missing":n.type),u=n&&n.target&&n.target.src;r.message="Loading script failed.\n("+o+": "+u+")",r.name="ScriptExternalLoadError",r.type=o,r.request=u,t(r)}),"app1")})).then((function(){return app1}))},9082:function(e,t,n){var r=new Error;e.exports=new Promise((function(e,t){if("undefined"!=typeof app2)return e();n.l("http://localhost:1902/remoteEntry.js",(function(n){if("undefined"!=typeof app2)return e();var o=n&&("load"===n.type?"missing":n.type),u=n&&n.target&&n.target.src;r.message="Loading script failed.\n("+o+": "+u+")",r.name="ScriptExternalLoadError",r.type=o,r.request=u,t(r)}),"app2")})).then((function(){return app2}))},9582:function(e,t,n){var r=new Error;e.exports=new Promise((function(e,t){if("undefined"!=typeof app2)return e();n.l("http://localhost:1904/remoteEntry.js",(function(n){if("undefined"!=typeof app2)return e();var o=n&&("load"===n.type?"missing":n.type),u=n&&n.target&&n.target.src;r.message="Loading script failed.\n("+o+": "+u+")",r.name="ScriptExternalLoadError",r.type=o,r.request=u,t(r)}),"app2")})).then((function(){return app2}))}},s={};function l(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={id:e,loaded:!1,exports:{}};return c[e].call(n.exports,n,n.exports,l),n.loaded=!0,n.exports}l.m=c,l.c=s,e=[],l.O=function(t,n,r,o){if(!n){var u=1/0;for(a=0;a<e.length;a++){n=e[a][0],r=e[a][1],o=e[a][2];for(var i=!0,f=0;f<n.length;f++)(!1&o||u>=o)&&Object.keys(l.O).every((function(e){return l.O[e](n[f])}))?n.splice(f--,1):(i=!1,o<u&&(u=o));i&&(e.splice(a--,1),t=r())}return t}o=o||0;for(var a=e.length;a>0&&e[a-1][2]>o;a--)e[a]=e[a-1];e[a]=[n,r,o]},l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,{a:t}),t},n=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__},l.t=function(e,r){if(1&r&&(e=this(e)),8&r)return e;if("object"==typeof e&&e){if(4&r&&e.__esModule)return e;if(16&r&&"function"==typeof e.then)return e}var o=Object.create(null);l.r(o);var u={};t=t||[null,n({}),n([]),n(n)];for(var i=2&r&&e;"object"==typeof i&&!~t.indexOf(i);i=n(i))Object.getOwnPropertyNames(i).forEach((function(t){u[t]=function(){return e[t]}}));return u.default=function(){return e},l.d(o,u),o},l.d=function(e,t){for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.f={},l.e=function(e){return Promise.all(Object.keys(l.f).reduce((function(t,n){return l.f[n](e,t),t}),[]))},l.u=function(e){return e+".bundle.js"},l.miniCssF=function(e){return"assets/css/"+e+".css"},l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.hmd=function(e){return(e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:function(){throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r={},o="zoop-f-mf-layout-ssr:",l.l=function(e,t,n,u){if(r[e])r[e].push(t);else{var i,f;if(void 0!==n)for(var a=document.getElementsByTagName("script"),c=0;c<a.length;c++){var s=a[c];if(s.getAttribute("src")==e||s.getAttribute("data-webpack")==o+n){i=s;break}}i||(f=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,l.nc&&i.setAttribute("nonce",l.nc),i.setAttribute("data-webpack",o+n),i.src=e),r[e]=[t];var p=function(t,n){i.onerror=i.onload=null,clearTimeout(d);var o=r[e];if(delete r[e],i.parentNode&&i.parentNode.removeChild(i),o&&o.forEach((function(e){return e(n)})),t)return t(n)},d=setTimeout(p.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=p.bind(null,i.onerror),i.onload=p.bind(null,i.onload),f&&document.head.appendChild(i)}},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u={104:[9104],413:[8413],530:[9530],621:[4621],945:[8945]},i={4621:["default","./Title",9582],8413:["default","./Counter",3258],8945:["default","./App2",9082],9104:["default","./Header",3258],9530:["default","./Card",3258]},l.f.remotes=function(e,t){l.o(u,e)&&u[e].forEach((function(e){var n=l.R;n||(n=[]);var r=i[e];if(!(n.indexOf(r)>=0)){if(n.push(r),r.p)return t.push(r.p);var o=function(t){t||(t=new Error("Container missing")),"string"==typeof t.message&&(t.message+='\nwhile loading "'+r[1]+'" from '+r[2]),c[e]=function(){throw t},r.p=0},u=function(e,n,u,i,f,a){try{var c=e(n,u);if(!c||!c.then)return f(c,i,a);var s=c.then((function(e){return f(e,i)}),o);if(!a)return s;t.push(r.p=s)}catch(e){o(e)}},f=function(e,t,o){return u(t.get,r[1],n,0,a,o)},a=function(t){r.p=1,c[e]=function(e){e.exports=t()}};u(l,r[2],0,0,(function(e,t,n){return e?u(l.I,r[0],0,e,f,n):o()}),1)}}))},function(){l.S={};var e={},t={};l.I=function(n,r){r||(r=[]);var o=t[n];if(o||(o=t[n]={}),!(r.indexOf(o)>=0)){if(r.push(o),e[n])return e[n];l.o(l.S,n)||(l.S[n]={});var u=l.S[n],i="zoop-f-mf-layout-ssr",f=function(e,t,n,r){var o=u[e]=u[e]||{},f=o[t];(!f||!f.loaded&&(!r!=!f.eager?r:i>f.from))&&(o[t]={get:n,from:i,eager:!!r})},a=function(e){var t=function(e){return t="Initialization of sharing external failed: "+e,"undefined"!=typeof console&&console.warn&&console.warn(t);var t};try{var o=l(e);if(!o)return;var u=function(e){return e&&e.init&&e.init(l.S[n],r)};if(o.then)return c.push(o.then(u,t));var i=u(o);if(i&&i.then)return c.push(i.catch(t))}catch(e){t(e)}},c=[];switch(n){case"default":f("react-dom","17.0.1",(function(){return function(){return l(3935)}}),1),f("react","17.0.1",(function(){return function(){return l(7294)}}),1),a(3258),a(9082),a(9582)}return c.length?e[n]=Promise.all(c).then((function(){return e[n]=1})):e[n]=1}}}(),l.p="http://localhost:1900/",function(){var e=function(e){var t=function(e){return e.split(".").map((function(e){return+e==e?+e:e}))},n=/^([^-+]+)?(?:-([^+]+))?(?:\+(.+))?$/.exec(e),r=n[1]?t(n[1]):[];return n[2]&&(r.length++,r.push.apply(r,t(n[2]))),n[3]&&(r.push([]),r.push.apply(r,t(n[3]))),r},t=function(t,n){t=e(t),n=e(n);for(var r=0;;){if(r>=t.length)return r<n.length&&"u"!=(typeof n[r])[0];var o=t[r],u=(typeof o)[0];if(r>=n.length)return"u"==u;var i=n[r],f=(typeof i)[0];if(u!=f)return"o"==u&&"n"==f||"s"==f||"u"==u;if("o"!=u&&"u"!=u&&o!=i)return o<i;r++}},n=function(t,r){if(0 in t){r=e(r);var o=t[0],u=o<0;u&&(o=-o-1);for(var i=0,f=1,a=!0;;f++,i++){var c,s,l=f<t.length?(typeof t[f])[0]:"";if(i>=r.length||"o"==(s=(typeof(c=r[i]))[0]))return!a||("u"==l?f>o&&!u:""==l!=u);if("u"==s){if(!a||"u"!=l)return!1}else if(a)if(l==s)if(f<=o){if(c!=t[f])return!1}else{if(u?c>t[f]:c<t[f])return!1;c!=t[f]&&(a=!1)}else if("s"!=l&&"n"!=l){if(u||f<=o)return!1;a=!1,f--}else{if(f<=o||s<l!=u)return!1;a=!1}else"s"!=l&&"n"!=l&&(a=!1,f--)}}var p=[],d=p.pop.bind(p);for(i=1;i<t.length;i++){var h=t[i];p.push(1==h?d()|d():2==h?d()&d():h?n(h,r):!d())}return!!d()},r=function(e,r,o){var u=e[r];return(r=Object.keys(u).reduce((function(e,r){return n(o,r)&&(!e||t(e,r))?r:e}),0))&&u[r]},o=function(e){return e.loaded=1,e.get()},u=function(e){return function(t,n,r,o){var u=l.I(t);return u&&u.then?u.then(e.bind(e,t,l.S[t],n,r,o)):e(t,l.S[t],n,r,o)}},i=u((function(e,t,n,u,i){var f=t&&l.o(t,n)&&r(t,n,u);return f?o(f):i()})),f={},a={4031:function(){return i("default","react-dom",[4,17,0,1],(function(){return function(){return l(3935)}}))},2751:function(){return i("default","react",[4,17,0,1],(function(){return function(){return l(7294)}}))}};[2751].forEach((function(e){l.m[e]=function(t){f[e]=0,delete l.c[e];var n=a[e]();if("function"!=typeof n)throw new Error("Shared module is not available for eager consumption: "+e);t.exports=n()}}));var c={646:[4031]};l.f.consumes=function(e,t){l.o(c,e)&&c[e].forEach((function(e){if(l.o(f,e))return t.push(f[e]);var n=function(t){f[e]=0,l.m[e]=function(n){delete l.c[e],n.exports=t()}},r=function(t){delete f[e],l.m[e]=function(n){throw delete l.c[e],t}};try{var o=a[e]();o.then?t.push(f[e]=o.then(n).catch(r)):n(o)}catch(e){r(e)}}))}}(),f=function(e){return new Promise((function(t,n){var r=l.miniCssF(e),o=l.p+r;if(function(e,t){for(var n=document.getElementsByTagName("link"),r=0;r<n.length;r++){var o=(i=n[r]).getAttribute("data-href")||i.getAttribute("href");if("stylesheet"===i.rel&&(o===e||o===t))return i}var u=document.getElementsByTagName("style");for(r=0;r<u.length;r++){var i;if((o=(i=u[r]).getAttribute("data-href"))===e||o===t)return i}}(r,o))return t();!function(e,t,n,r){var o=document.createElement("link");o.rel="stylesheet",o.type="text/css",o.onerror=o.onload=function(u){if(o.onerror=o.onload=null,"load"===u.type)n();else{var i=u&&("load"===u.type?"missing":u.type),f=u&&u.target&&u.target.href||t,a=new Error("Loading CSS chunk "+e+" failed.\n("+f+")");a.code="CSS_CHUNK_LOAD_FAILED",a.type=i,a.request=f,o.parentNode.removeChild(o),r(a)}},o.href=t,document.head.appendChild(o)}(e,o,t,n)}))},a={179:0},l.f.miniCss=function(e,t){a[e]?t.push(a[e]):0!==a[e]&&{646:1}[e]&&t.push(a[e]=f(e).then((function(){a[e]=0}),(function(t){throw delete a[e],t})))},function(){var e={179:0};l.f.j=function(t,n){var r=l.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else if(/^(6(44|46|91)|216|24)$/.test(t)){var o=new Promise((function(n,o){r=e[t]=[n,o]}));n.push(r[2]=o);var u=l.p+l.u(t),i=new Error;l.l(u,(function(n){if(l.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var o=n&&("load"===n.type?"missing":n.type),u=n&&n.target&&n.target.src;i.message="Loading chunk "+t+" failed.\n("+o+": "+u+")",i.name="ChunkLoadError",i.type=o,i.request=u,r[1](i)}}),"chunk-"+t,t)}else e[t]=0},l.O.j=function(t){return 0===e[t]||!/^(6(44|46|91)|216|24)$/.test(t)};var t=function(t,n){var r,o,u=n[0],i=n[1],f=n[2],a=0;for(r in i)l.o(i,r)&&(l.m[r]=i[r]);for(f&&f(l),t&&t(n);a<u.length;a++)o=u[a],l.o(e,o)&&e[o]&&e[o][0](),e[u[a]]=0;l.O()},n=this.webpackChunkzoop_f_mf_layout_ssr=this.webpackChunkzoop_f_mf_layout_ssr||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var p=l.O(void 0,[216],(function(){return l(1209)}));p=l.O(p)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,